=====================
2019-04-11 测试介绍
=====================

安装指南
===========

建议使用 `DigitalOcean <https://m.do.co/c/76db83b92fdd>`_ , `Vultr <https://www.vultr.com/?ref=7866920>`_ 或者
`GigiCloud <https://clientarea.gigsgigscloud.com/?affid=2031>`_ 等云服务器。
(Vultr亚洲服务器经常被墙，不稳定。DigitalOcean和Vultr支持按小时收费，Gigicloud只能按月收费，请根据自身情况选择)

建议使用8G内存以上的电脑，最好位置选在亚洲。

如果你使用本地mac或者windows请确保你家网络支持upnp并且具有公网地址。

如果你想使用下面的自动安装脚本，请选择Ubuntu18的系统

捐献地址
==========
如果各位看官觉得做得不错的话，就打赏一下呗，你的支持是我继续下去的动力！

ETH: 0xA39a575fE33D14E3DdA27303b4Bf239047376cf4

BTC: 12VqnXgGiFz1DStQBsJYsfSm95ehBCiUnJ

自动安装脚本（适用于Ubuntu14, Ubuntu16, Ubuntu18系统）
============================================

使用方法：

ssh root@你的服务器ip

输入命令（复制下面"$" 以后的字符，直接黏贴到命令行，然后按输入）

.. code-block::

    $ sh -c "$(wget https://raw.githubusercontent.com/zsluedem/China-rnode-test-session/master/2019-04-11/install.sh -O -)"

然后会出现以下日志（可能某些日期会有出入）

.. code-block::

    --2019-02-14 05:43:05--  https://raw.githubusercontent.com/zsluedem/China-rnode-test-session/master/2019-04-11/install.sh
    Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.8.133
    Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.8.133|:443... connected.
    HTTP request sent, awaiting response... 200 OK
    Length: 233 [text/plain]
    Saving to: ‘install.sh’

    install.sh                                100%[====================================================================================>]     233  --.-KB/s    in 0s

    2019-02-14 05:43:06 (26.3 MB/s) - ‘install.sh’ saved [233/233]

    xxxxxxxxxxxx
    xxxxxxxxxxxx
    xxxxxxxxxxxx
    (以上xxx代表很多很多很多日志)

**注意**

然后会弹出一大段很长的日志，然后会进入一个安装Jdk11的 画面如下：

.. image:: https://github.com/zsluedem/China-rnode-test-session/blob/master/img/WX20190411-101202.png

选择OK，这里使用键盘Tab键(Q键隔壁那个)移动光标

然后再进入以下画面

.. image:: https://github.com/zsluedem/China-rnode-test-session/blob/master/img/WX20190411-101323.png

继续使用Tab选择yes, 然后enter

然后继续一大段日志，等待安装完成

检验安装是否成功
----------------

命令行输入:

.. code-block::

    $ rnode --version

如果输出以下即安装成功，你可以使用rnode进行操作了

.. code-block::

    RChain Node 0.9.2.git26ad26eb

Rnode 版本
===========

测试通过zoom 参加：https://zoom.us/j/8526821974

今天版本 RChain Node 0.9.2.git26ad26eb (**26ad26ebb138a672513be7a280fac0378357daec**) **版本必须一致** 判定运行rnode版本_

你可以选择二进制文件运行或者docker镜像运行

* 二进制文件下载地址: https://github.com/rchain/rchain/releases/download/v0.9.2/rnode-0.9.2.git26ad26eb.tgz

`中文版Rnode使用说明下载 <https://github.com/zsluedem/China-rnode-test-session/raw/master/RChain%E8%8A%82%E7%82%B9%E6%B5%8B%E8%AF
%95%E6%8C%87%E5%AF%BC.pdf>`_ (说明有一部分已经过期，但是仍然有一定参考价值，技术人员可以看一下)

`英文版Rnode使用说明 <https://rchain.atlassian.net/wiki/spaces/CORE/pages/428376065/User+guide+for+running+RNode>`_

bootstrap节点地址
==================

    晚上测试时间公布

测试内容
=========

1. 部署合约现在需要--private-key 参数指代部署的用户

最近的版本更新有一个很重要的特点就是在部署合约的时候需要指定--private-key参数来代表部署合约的人。

.. code-block:: console

    rnode deploy --phlo-limit=100000000  --phlo-price=1 --private-key <部署人的私钥> <合约>``

    $ rnode deploy --phlo-limit=100000000  --phlo-price=1 --private-key 19d1d36888aad7d2372b32ba45ec7ce11eb0fcf65c3b055682772177639eec89 tut-hello.rho

其他内容
==========
1. `连接bootstrap节点 <https://github.com/zsluedem/China-rnode-test-session/blob/master/2019-03-08/2019-03-08.rst#%E8%BF%9E%E6%8E%A5bootstrap%E8%8A%82%E7%82%B9>`_
2. `查看区块链出块的dag <https://github.com/zsluedem/China-rnode-test-session/blob/master/%E9%80%9A%E7%94%A8/dag%E6%9F%A5%E7%9C%8B/readme.rst>`_
3. `使节点成为validator <https://github.com/zsluedem/China-rnode-test-session/blob/master/2019-03-08/2019-03-08.rst#2%E4%BD%BF%E7%94%A8%E6%9C%AAbonded%E7%9A%84key%E6%B5%8B%E8%AF%95>`_

判定运行rnode版本
==================

.. _判定运行rnode版本:

当你运行rnode时候，开始展示的日志如下：（加粗部分为版本号）

        12:23:08.881 [main] INFO  c.r.n.configuration.Configuration$ - Using configuration file:/s/s.rnode/rnode.toml
        12:23:08.905 [main] WARN  c.r.n.configuration.Configuration$ - Configuration file/s/s.rnode/rnode.toml not found
        12:23:08.997 [main] INFO  c.r.n.configuration.Configuration$ - Starting with profile default
        12:23:09.504 [main] INFO  coop.rchain.node.Main$ - RChain Node 0.8.3.git57ae9723(**57ae9723f67fc16824c56942545808672cfb8c6c**)
        12:23:09.515 [main] INFO  coop.rchain.node.NodeEnvironment$ - Using data dir:/s/s.rnode
        12:23:09.557 [main] INFO  c.r.c.t.GenerateCertificateIfAbsent - No certificate found at path/s/s.rnode/node.certificate.pem
        12:23:09.558 [main] INFO  c.r.c.t.GenerateCertificateIfAbsent - Generating a X.509 certificate for the node
        12:23:09.562 [main] INFO  c.r.c.t.GenerateCertificateIfAbsent - Generating a PEM secret key for the node
